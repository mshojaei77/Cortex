from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from rag_system import RAGSystem, RAGSettings
import uvicorn

# Add API metadata
app = FastAPI(
    title="RAG System API",
    description="API for querying documents using RAG (Retrieval-Augmented Generation)",
    version="1.0.0",
    docs_url="/docs",   # Swagger UI endpoint
    redoc_url="/redoc"  # ReDoc endpoint
)

class Query(BaseModel):
    query: str
    
    class Config:
        json_schema_extra = {
            "example": {
                "query": "What is Distillation?"
            }
        }

class Response(BaseModel):
    answer: str

# Initialize RAG system
rag_system = RAGSystem(settings=RAGSettings())

@app.post("/query", 
    response_model=Response,
    summary="Query the RAG system",
    description="Send a query to the RAG system and get an answer based on the processed documents",
    response_description="Returns the answer generated by the RAG system"
)
async def query_endpoint(query: Query):
    """
    Query the RAG system with a question.
    
    - **query**: The question you want to ask about the documents
    
    Returns:
    - **answer**: The generated answer based on the document context
    """
    try:
        answer = rag_system.run_query(query.query)
        return {"answer": answer}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

# Health check endpoint
@app.get("/health",
    summary="Health check",
    description="Check if the API is running",
    response_description="Returns OK if the API is running"
)
async def health_check():
    """Simple health check endpoint"""
    return {"status": "OK"}


if __name__ == "__main__":
    import os
    import uvicorn
    # Change to backend/app only if not already there
    if not os.getcwd().replace("\\", "/").endswith("backend/app"):
        os.chdir("backend/app")
    uvicorn.run("api:app", host="0.0.0.0", port=8000, reload=True)